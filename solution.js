/*
Link to the deployed worker: https://zaraz-takehome.sebastiaandirks.workers.dev/
Link to the git repository with the code: https://github.com/SebastiaanDirks/cloudflare-zaraz-takehome
 */

const createResponseHtml = (script) => `<!DOCTYPE html>
<body>
  <h1>Hello World</h1>
  <p>This markup was generated by a Cloudflare Worker.</p>
  <script>
    const name = "Sebastiaan Dirks";
    const quote = "If others can do it, so can you.";
  </script>
  ${script !== undefined && script.length > 0 ? '<script>' + script + '</script>' : ''}
  <script src="foo"></script>
</body>`;

const cookiesFoundScript = `
const getCookie = (n) => {
  for (const cookie of document.cookie.split(';')) {
    const [name, value] = cookie.split('=')
    if (name.trim() === n) return decodeURIComponent(value)
  }
  return null
}

console.log(getCookie('name'))
console.log(getCookie('quote'))`

const cookiesNotFoundScript = `
fetch('https://zaraz-takehome.sebastiaandirks.workers.dev/', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json'
  },
  body: JSON.stringify({name, quote})
}).then(async response => {
  console.log(await response.text())
}).catch(error => {
  console.log("Error posting to worker.")
})
`

const cookieExists = (n, request) => {
    return (request.headers.get('Cookie') || "").includes(n + "=")
}

async function handleRequest(request) {
    if (request.method === 'POST') {
        const data = await request.json()
        console.log(data)
        if (!data.hasOwnProperty('name') || !data.hasOwnProperty('quote'))
            return new Response("Expected both name and quote", {status: 500})

        const response = new Response(request.headers.get('CF-Connecting-IP'), {
            headers: {
                'content-type': 'text/plain;charset=UTF-8'
            }
        })
        response.headers.append('set-cookie', `name=${data.name}; expires=Fri, 31 Dec 9999 23:59:59 GMT`)
        response.headers.append('set-cookie', `quote=${data.quote}; expires=Fri, 31 Dec 9999 23:59:59 GMT`)
        return response
    } else {
        let addedScript = ''
        if (cookieExists('name', request) && cookieExists('quote', request)) {
            addedScript = cookiesFoundScript
        } else {
            addedScript = cookiesNotFoundScript
        }

        return new Response(createResponseHtml(addedScript), {
            headers: {
                'content-type': 'text/html;charset=UTF-8'
            }
        });
    }
}

addEventListener('fetch', event => {
    return event.respondWith(handleRequest(event.request));
});